AWSTemplateFormatVersion: 2010-09-09

Parameters:
  BuildIdentifier:
    Type: String

Resources:
  DeployBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: BucketOwnerFullControl

  GraveyardTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      Enabled: true
      EventSourceArn: !GetAtt DeadLetterQueue.Arn
      FunctionName: !GetAtt LambdaGraveyard.Arn

  LambdaGraveyard:
    Type: AWS::Lambda::Function
    Properties:
      Role: !GetAtt LambdaRole.Arn
      Runtime: nodejs12.x
      Handler: worker.handler
      Code:
        S3Bucket: !Ref DeployBucket
        S3Key: !Sub ${BuildIdentifier}.zip
      Environment:
        Variables:
          WorkerRole: Graveyard

  WorkerTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      BatchSize: 1
      Enabled: true
      EventSourceArn: !GetAtt NotificationQueue.Arn
      FunctionName: !GetAtt LambdaWorker.Arn

  LambdaWorker:
    Type: AWS::Lambda::Function
    Properties:
      Role: !GetAtt LambdaRole.Arn
      Runtime: nodejs12.x
      Handler: worker.handler
      Code:
        S3Bucket: !Ref DeployBucket
        S3Key: !Sub ${BuildIdentifier}.zip
      Environment:
        Variables:
          WorkerRole: Notifier

  LambdaBff:
    Type: AWS::Lambda::Function
    Properties:
      Role: !GetAtt LambdaRole.Arn
      Runtime: nodejs12.x
      Handler: bff.handler
      Code:
        S3Bucket: !Ref DeployBucket
        S3Key: !Sub ${BuildIdentifier}.zip
      Environment:
        Variables:
          QueueUrl: !Ref NotificationQueue

  BffRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Can run BFF lambda
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: BffExecute
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: !GetAtt LambdaBff.Arn

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Description: lambda execution role can use sqs
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: SQS-Queues
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - SQS:*
                Resource: 
                  - !GetAtt NotificationQueue.Arn
                  - !GetAtt DeadLetterQueue.Arn

  NotificationQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 10
      RedrivePolicy: !Sub
        - '{"deadLetterTargetArn":"${dlq}","maxReceiveCount":5}'
        - dlq: !GetAtt DeadLetterQueue.Arn

  DeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600

  BffApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub ${AWS::StackName}-bff-api
      ProtocolType: HTTP
      CredentialsArn: !GetAtt BffRole.Arn
      Target: !Sub
        - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FunctionArn}/invocations
        - FunctionArn: !GetAtt LambdaBff.Arn

Outputs:
  DeployBucket:
    Value: !Ref DeployBucket
  WebUri:
    Value: !Sub https://${BffApi}.execute-api.${AWS::Region}.amazonaws.com/
